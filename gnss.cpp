#include <TinyGPS++.h>
#include <Wire.h>
#include <HardwareSerial.h>

#define RXPin 16
#define TXPin 17
#define GPSBaud 9600

TinyGPSPlus gps;
HardwareSerial gpsSerial(1);

// üìå ‡πÄ‡∏õ‡∏¥‡∏î GNSS ‡∏Ñ‡∏£‡∏ö‡∏ä‡∏∏‡∏î (GPS, GLONASS, Galileo, BeiDou, QZSS)
const uint8_t enableGNSS[] = {
  0xB5, 0x62, 0x06, 0x3E, 0x2C, 0x00, 
  0x00, 0x00, 0x20, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,  
  0x01, 0x01, 0x01, 0x01, 
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
  0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01,
  0xD8, 0x5B
};

// üìå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏õ‡πá‡∏ô 5Hz
const uint8_t setRate5Hz[] = {
  0xB5, 0x62, 0x06, 0x08, 0x06, 0x00,
  0xFA, 0x00, 0x01, 0x00, 0x00, 0x00,
  0xC0, 0x7E
};

// üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á UBX
void sendUBXCommand(const uint8_t *command, size_t length) {
  for (size_t i = 0; i < length; i++) {
    gpsSerial.write(command[i]);
  }
}

void setup() {
    Serial.begin(115200);
    gpsSerial.begin(GPSBaud, SERIAL_8N1, RXPin, TXPin);

    Serial.println("Initializing GPS...");
    sendUBXCommand(enableGNSS, sizeof(enableGNSS));
    delay(500);
    sendUBXCommand(setRate5Hz, sizeof(setRate5Hz));
    delay(500);

    Serial.println("GNSS Enabled with 5Hz update rate.");
}

void loop() {
    while (gpsSerial.available()) {
        gps.encode(gpsSerial.read());
    }

    if (gps.location.isUpdated()) {
        Serial.printf("Lat:%.8f, Lon:%.8f | Spd:%.2fm/s | ", 
                      gps.location.lat(), gps.location.lng(), gps.speed.mps());

        // ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ HDOP
        float hdop = gps.hdop.hdop();
        if (hdop == 0.0) {
            Serial.print("HDOP:N/A");
        } else {
            Serial.printf("HDOP:%.2f", hdop);
        }

        Serial.printf(" | Sat:%d | ", gps.satellites.value());

        // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏î‡∏≤‡∏ß‡πÄ‡∏ó‡∏µ‡∏¢‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô + ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á
        showGNSSInfo();
        showUsedSatellites();
        Serial.println();
    }
}

// üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏î‡∏≤‡∏ß‡πÄ‡∏ó‡∏µ‡∏¢‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡∏à‡∏≤‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏∞‡∏ö‡∏ö
void showGNSSInfo() {
    int gpsCount = 0, glonassCount = 0, galileoCount = 0, beidouCount = 0, qzssCount = 0;

    gpsSerial.println("$GNGSV");
    delay(200);
    String gsvData = readSerialData();

    gpsCount = countOccurrences(gsvData, "GP");
    glonassCount = countOccurrences(gsvData, "GL");
    galileoCount = countOccurrences(gsvData, "GA");
    beidouCount = countOccurrences(gsvData, "BD");
    qzssCount = countOccurrences(gsvData, "QZ");

    Serial.printf("GPS:%d | GLO:%d | GAL:%d | BDS:%d | QZS:%d | ", 
                  gpsCount, glonassCount, galileoCount, beidouCount, qzssCount);
}

// üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏î‡∏≤‡∏ß‡πÄ‡∏ó‡∏µ‡∏¢‡∏°‡∏ó‡∏µ‡πà **"‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á"** ‡∏à‡∏≤‡∏Å GNGSA
void showUsedSatellites() {
    gpsSerial.println("$GNGSA");
    delay(200);
    String gsaData = readSerialData();

    int usedSatellites = countUsedSatellites(gsaData);
    
    Serial.printf("Used:%d", usedSatellites);
}

// üì° ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å GPS
String readSerialData() {
    String data = "";
    unsigned long start = millis();
    while (millis() - start < 500) {
        while (gpsSerial.available()) {
            char c = gpsSerial.read();
            data += c;
        }
    }
    return data;
}

// üîç ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏û‡∏ö‡πÉ‡∏ô String
int countOccurrences(String data, String keyword) {
    int count = 0;
    int index = 0;
    
    while ((index = data.indexOf(keyword, index)) != -1) {
        count++;
        index += keyword.length();
    }
    return count;
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏î‡∏≤‡∏ß‡πÄ‡∏ó‡∏µ‡∏¢‡∏°‡∏ó‡∏µ‡πà **‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á** ‡∏à‡∏≤‡∏Å GNGSA
int countUsedSatellites(String gsaData) {
    int count = 0;
    int index = 0;
    
    while ((index = gsaData.indexOf(",", index)) != -1) {
        count++;
        index++;
    }

    // ‚úÖ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô GNGSA ‡∏à‡∏∞‡∏°‡∏µ ",,," ‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡∏±‡∏ß ‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏ö‡∏≠‡∏≠‡∏Å 3 ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏£‡∏Å
    if (count > 3) count -= 3;
    
    return count;
}
